name: Step 1 # Preparing to make your extension

on:
  push:
    branches:
      - "!main"
      - "my-ghc-extension"

permissions:
  contents: read
  actions: write
  issues: write

env:
  STEP_2_FILE: ".github/steps/2-running-our-extension.md"

jobs:
  find_exercise:
    name: Find exercise by issue title
    runs-on: ubuntu-latest

    outputs:
      issue-url: ${{ steps.get-issue-url-by-title.outputs.ISSUE_URL }}

    steps:
      - id: get-issue-url-by-title
        run: |
          issue_url=$(gh issue list --repo $REPO --search "in:title Exercise:" --json url,title --jq '.[].url')
          echo "ISSUE_URL=$issue_url" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/checking-work.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      # Nothing to verify. Creating the branch is enough for now.
      # In a future update, we will check that the codepsace is running and that the port is set properly.
      # - Get the list of codespaces
      #   gh codespace list --json "name"
      # - Check if the codespace has port 3000 set to open
      #   gh codespace ports --codespace symmetrical-winner-w9xjw5wv59pf5vvj --json "sourcePort,visibility"

      # END: Check practical exercise

      - name: Build message - step finished
        id: build-message-step-finish
        uses: skills/action-text-variables@v1
        with:
          template-file: skills-response-templates/step-feedback/step-finished-prepare-next-step.md
          template-vars: |
            next_step_number=2

      - name: Update comment - step finished
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$ISSUE_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: ${{ steps.build-message-step-finish.outputs.updated-text }}

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/response-templates
          path: skills-response-templates

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_2_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create comment - watching for progress
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file skills-response-templates/step-feedback/watching-for-progress.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "Step 1"
          gh workflow enable "Step 2"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
